<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5B6TAAAAAElFTkSuQmCC
</value>
  </data>
</root>